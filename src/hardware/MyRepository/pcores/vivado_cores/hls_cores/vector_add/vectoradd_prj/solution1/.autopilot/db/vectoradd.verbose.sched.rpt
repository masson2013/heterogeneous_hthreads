

================================================================
== Vivado HLS Report for 'vectoradd'
================================================================
* Date:           Wed Mar 25 11:35:54 2015

* Version:        2014.2 (Build 928826 on Thu Jun 05 17:25:20 PM 2014)
* Project:        vectoradd_prj
* Solution:       solution1
* Product family: virtex7 virtex7_fpv6 
* Target device:  xc7vx485tffg1761-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      6.41|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- For_Loop   |    ?|    ?|         ?|          -|          -|  inf |    no    |
        | + add_Loop  |    ?|    ?|         2|          -|          -|     ?|    no    |
        | + sub_Loop  |    ?|    ?|         2|          -|          -|     ?|    no    |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+--------+
|       Name      | BRAM_18K| DSP48E|   FF   |   LUT  |
+-----------------+---------+-------+--------+--------+
|Expression       |        -|      -|       -|       -|
|FIFO             |        -|      -|       -|       -|
|Instance         |        -|      -|       -|       -|
|Memory           |        -|      -|       -|       -|
|Multiplexer      |        -|      -|       -|       -|
|Register         |        -|      -|       -|       -|
+-----------------+---------+-------+--------+--------+
|Total            |        0|      0|       0|       0|
+-----------------+---------+-------+--------+--------+
|Available        |     2060|   2800|  607200|  303600|
+-----------------+---------+-------+--------+--------+
|Utilization (%)  |        0|      0|       0|       0|
+-----------------+---------+-------+--------+--------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 0
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 7
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / (!tmp & tmp_2 & tmp_8)
	7  / (tmp & tmp_3)
	2  / (!tmp & !tmp_2) | (tmp & !tmp_3) | (!tmp & !tmp_8)
6 --> 
	5  / true
7 --> 
	5  / true
* FSM state operations: 

 <State 1>: 0.00ns
ST_1: stg_8 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i32* %cmd) nounwind, !map !0

ST_1: stg_9 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32* %resp) nounwind, !map !6

ST_1: stg_10 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([4096 x i32]* %a) nounwind, !map !10

ST_1: stg_11 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap([4096 x i32]* %b) nounwind, !map !16

ST_1: stg_12 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap([4096 x i32]* %result) nounwind, !map !20

ST_1: stg_13 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @str) nounwind

ST_1: stg_14 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_15 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecInterface(i32* %cmd, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_16 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecInterface(i32* %resp, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_17 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecInterface([4096 x i32]* %a, [5 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 1024, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_18 [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecInterface([4096 x i32]* %b, [5 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 1024, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_19 [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecInterface([4096 x i32]* %result, [5 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 1024, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_20 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecMemCore([4096 x i32]* %a, [1 x i8]* @p_str1, [12 x i8]* @p_str4, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_21 [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecMemCore([4096 x i32]* %b, [1 x i8]* @p_str1, [12 x i8]* @p_str4, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_22 [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecMemCore([4096 x i32]* %result, [1 x i8]* @p_str1, [12 x i8]* @p_str4, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_23 [1/1] 0.00ns
:15  br label %1


 <State 2>: 0.00ns
ST_2: op [1/1] 0.00ns
:3  %op = call i32 @_ssdm_op_Read.axis.volatile.i32P(i32* %cmd) nounwind


 <State 3>: 0.00ns
ST_3: end [1/1] 0.00ns
:4  %end = call i32 @_ssdm_op_Read.axis.volatile.i32P(i32* %cmd) nounwind


 <State 4>: 1.63ns
ST_4: loop_begin [1/1] 0.00ns
:0  %loop_begin = call i32 (...)* @_ssdm_op_SpecLoopBegin() nounwind

ST_4: stg_27 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str5) nounwind

ST_4: tmp_11 [1/1] 0.00ns
:2  %tmp_11 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str5) nounwind

ST_4: i_5 [1/1] 0.00ns
:5  %i_5 = call i32 @_ssdm_op_Read.axis.volatile.i32P(i32* %cmd) nounwind

ST_4: tmp [1/1] 1.41ns
:6  %tmp = icmp eq i32 %op, 1

ST_4: stg_31 [1/1] 0.00ns
:7  br i1 %tmp, label %.preheader1.preheader, label %4

ST_4: tmp_2 [1/1] 1.41ns
:0  %tmp_2 = icmp eq i32 %op, 2

ST_4: stg_33 [1/1] 0.00ns
:1  br i1 %tmp_2, label %.preheader.preheader, label %.loopexit

ST_4: tmp_4 [1/1] 1.63ns
.preheader.preheader:0  %tmp_4 = add nsw i32 %end, -1

ST_4: stg_35 [1/1] 0.89ns
.preheader.preheader:1  br label %.preheader

ST_4: tmp_1 [1/1] 1.63ns
.preheader1.preheader:0  %tmp_1 = add nsw i32 %end, -1

ST_4: stg_37 [1/1] 0.89ns
.preheader1.preheader:1  br label %.preheader1


 <State 5>: 2.39ns
ST_5: i_1 [1/1] 0.00ns
.preheader:0  %i_1 = phi i32 [ %i_3, %._crit_edge3 ], [ %i_5, %.preheader.preheader ]

ST_5: tmp_8 [1/1] 1.41ns
.preheader:1  %tmp_8 = icmp slt i32 %i_1, %end

ST_5: stg_40 [1/1] 0.00ns
.preheader:2  br i1 %tmp_8, label %5, label %.loopexit

ST_5: tmp_s [1/1] 0.00ns
:1  %tmp_s = sext i32 %i_1 to i64

ST_5: a_addr_1 [1/1] 0.00ns
:2  %a_addr_1 = getelementptr [4096 x i32]* %a, i64 0, i64 %tmp_s

ST_5: a_load_1 [2/2] 2.39ns
:3  %a_load_1 = load i32* %a_addr_1, align 4

ST_5: b_addr_1 [1/1] 0.00ns
:4  %b_addr_1 = getelementptr [4096 x i32]* %b, i64 0, i64 %tmp_s

ST_5: b_load_1 [2/2] 2.39ns
:5  %b_load_1 = load i32* %b_addr_1, align 4

ST_5: tmp_10 [1/1] 1.41ns
:9  %tmp_10 = icmp eq i32 %i_1, %tmp_4

ST_5: stg_47 [1/1] 0.00ns
.loopexit:0  br label %.loopexit2

ST_5: i [1/1] 0.00ns
.preheader1:0  %i = phi i32 [ %i_2, %._crit_edge ], [ %i_5, %.preheader1.preheader ]

ST_5: tmp_3 [1/1] 1.41ns
.preheader1:1  %tmp_3 = icmp slt i32 %i, %end

ST_5: stg_50 [1/1] 0.00ns
.preheader1:2  br i1 %tmp_3, label %2, label %.loopexit2

ST_5: tmp_5 [1/1] 0.00ns
:1  %tmp_5 = sext i32 %i to i64

ST_5: a_addr [1/1] 0.00ns
:2  %a_addr = getelementptr [4096 x i32]* %a, i64 0, i64 %tmp_5

ST_5: a_load [2/2] 2.39ns
:3  %a_load = load i32* %a_addr, align 4

ST_5: b_addr [1/1] 0.00ns
:4  %b_addr = getelementptr [4096 x i32]* %b, i64 0, i64 %tmp_5

ST_5: b_load [2/2] 2.39ns
:5  %b_load = load i32* %b_addr, align 4

ST_5: tmp_7 [1/1] 1.41ns
:9  %tmp_7 = icmp eq i32 %i, %tmp_1

ST_5: empty [1/1] 0.00ns
.loopexit2:0  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str5, i32 %tmp_11) nounwind

ST_5: stg_58 [1/1] 0.00ns
.loopexit2:1  br label %1


 <State 6>: 6.41ns
ST_6: stg_59 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str7) nounwind

ST_6: a_load_1 [1/2] 2.39ns
:3  %a_load_1 = load i32* %a_addr_1, align 4

ST_6: b_load_1 [1/2] 2.39ns
:5  %b_load_1 = load i32* %b_addr_1, align 4

ST_6: tmp_9 [1/1] 1.63ns
:6  %tmp_9 = sub nsw i32 %a_load_1, %b_load_1

ST_6: result_addr_1 [1/1] 0.00ns
:7  %result_addr_1 = getelementptr [4096 x i32]* %result, i64 0, i64 %tmp_s

ST_6: stg_64 [1/1] 2.39ns
:8  store i32 %tmp_9, i32* %result_addr_1, align 4

ST_6: stg_65 [1/1] 0.00ns
:10  br i1 %tmp_10, label %6, label %._crit_edge3

ST_6: stg_66 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.axis.volatile.i32P(i32* %resp, i32 1) nounwind

ST_6: stg_67 [1/1] 0.00ns
:1  br label %._crit_edge3

ST_6: i_3 [1/1] 1.63ns
._crit_edge3:0  %i_3 = add nsw i32 %i_1, 1

ST_6: stg_69 [1/1] 0.00ns
._crit_edge3:1  br label %.preheader


 <State 7>: 6.41ns
ST_7: stg_70 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str6) nounwind

ST_7: a_load [1/2] 2.39ns
:3  %a_load = load i32* %a_addr, align 4

ST_7: b_load [1/2] 2.39ns
:5  %b_load = load i32* %b_addr, align 4

ST_7: tmp_6 [1/1] 1.63ns
:6  %tmp_6 = add nsw i32 %b_load, %a_load

ST_7: result_addr [1/1] 0.00ns
:7  %result_addr = getelementptr [4096 x i32]* %result, i64 0, i64 %tmp_5

ST_7: stg_75 [1/1] 2.39ns
:8  store i32 %tmp_6, i32* %result_addr, align 4

ST_7: stg_76 [1/1] 0.00ns
:10  br i1 %tmp_7, label %3, label %._crit_edge

ST_7: stg_77 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.axis.volatile.i32P(i32* %resp, i32 1) nounwind

ST_7: stg_78 [1/1] 0.00ns
:1  br label %._crit_edge

ST_7: i_2 [1/1] 1.63ns
._crit_edge:0  %i_2 = add nsw i32 %i, 1

ST_7: stg_80 [1/1] 0.00ns
._crit_edge:1  br label %.preheader1



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.2
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _vectoradd_HH_
#define _vectoradd_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct vectoradd : public sc_module {
    // Port declarations 29
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > cmd_TDATA;
    sc_in< sc_logic > cmd_TVALID;
    sc_out< sc_logic > cmd_TREADY;
    sc_out< sc_lv<32> > resp_TDATA;
    sc_out< sc_logic > resp_TVALID;
    sc_in< sc_logic > resp_TREADY;
    sc_out< sc_lv<32> > a_Addr_A;
    sc_out< sc_logic > a_EN_A;
    sc_out< sc_lv<4> > a_WEN_A;
    sc_out< sc_lv<32> > a_Din_A;
    sc_in< sc_lv<32> > a_Dout_A;
    sc_out< sc_logic > a_Clk_A;
    sc_out< sc_logic > a_Rst_A;
    sc_out< sc_lv<32> > b_Addr_A;
    sc_out< sc_logic > b_EN_A;
    sc_out< sc_lv<4> > b_WEN_A;
    sc_out< sc_lv<32> > b_Din_A;
    sc_in< sc_lv<32> > b_Dout_A;
    sc_out< sc_logic > b_Clk_A;
    sc_out< sc_logic > b_Rst_A;
    sc_out< sc_lv<32> > result_Addr_A;
    sc_out< sc_logic > result_EN_A;
    sc_out< sc_lv<4> > result_WEN_A;
    sc_out< sc_lv<32> > result_Din_A;
    sc_in< sc_lv<32> > result_Dout_A;
    sc_out< sc_logic > result_Clk_A;
    sc_out< sc_logic > result_Rst_A;


    // Module declarations
    vectoradd(sc_module_name name);
    SC_HAS_PROCESS(vectoradd);

    ~vectoradd();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<32> > grp_fu_155_p2;
    sc_signal< sc_lv<32> > reg_160;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_lv<1> > tmp_fu_164_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_169_p2;
    sc_signal< sc_lv<32> > op_reg_234;
    sc_signal< sc_lv<32> > end_reg_240;
    sc_signal< sc_lv<1> > tmp_reg_253;
    sc_signal< sc_lv<1> > tmp_2_reg_257;
    sc_signal< sc_lv<64> > tmp_s_fu_179_p1;
    sc_signal< sc_lv<64> > tmp_s_reg_264;
    sc_signal< sc_lv<1> > tmp_8_fu_174_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_185_p2;
    sc_signal< sc_lv<1> > tmp_10_reg_279;
    sc_signal< sc_lv<64> > tmp_5_fu_196_p1;
    sc_signal< sc_lv<64> > tmp_5_reg_286;
    sc_signal< sc_lv<1> > tmp_3_fu_191_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_202_p2;
    sc_signal< sc_lv<1> > tmp_7_reg_301;
    sc_signal< sc_lv<32> > i_3_fu_215_p2;
    sc_signal< sc_logic > ap_sig_ioackin_resp_TREADY;
    sc_signal< sc_lv<32> > i_2_fu_228_p2;
    sc_signal< sc_lv<32> > i_1_reg_134;
    sc_signal< sc_lv<32> > i_reg_144;
    sc_signal< sc_logic > ap_reg_ioackin_resp_TREADY;
    sc_signal< sc_lv<32> > a_Addr_A_orig;
    sc_signal< sc_lv<32> > b_Addr_A_orig;
    sc_signal< sc_lv<32> > tmp_9_fu_208_p2;
    sc_signal< sc_lv<32> > tmp_6_fu_221_p2;
    sc_signal< sc_lv<32> > result_Addr_A_orig;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_87;
    sc_signal< bool > ap_sig_bdd_101;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_st2_fsm_1;
    static const sc_lv<3> ap_ST_st3_fsm_2;
    static const sc_lv<3> ap_ST_st4_fsm_3;
    static const sc_lv<3> ap_ST_st5_fsm_4;
    static const sc_lv<3> ap_ST_st6_fsm_5;
    static const sc_lv<3> ap_ST_st7_fsm_6;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<32> ap_const_lv32_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_Addr_A();
    void thread_a_Addr_A_orig();
    void thread_a_Clk_A();
    void thread_a_Din_A();
    void thread_a_EN_A();
    void thread_a_Rst_A();
    void thread_a_WEN_A();
    void thread_ap_sig_bdd_101();
    void thread_ap_sig_bdd_87();
    void thread_ap_sig_ioackin_resp_TREADY();
    void thread_b_Addr_A();
    void thread_b_Addr_A_orig();
    void thread_b_Clk_A();
    void thread_b_Din_A();
    void thread_b_EN_A();
    void thread_b_Rst_A();
    void thread_b_WEN_A();
    void thread_cmd_TREADY();
    void thread_grp_fu_155_p2();
    void thread_i_2_fu_228_p2();
    void thread_i_3_fu_215_p2();
    void thread_resp_TDATA();
    void thread_resp_TVALID();
    void thread_result_Addr_A();
    void thread_result_Addr_A_orig();
    void thread_result_Clk_A();
    void thread_result_Din_A();
    void thread_result_EN_A();
    void thread_result_Rst_A();
    void thread_result_WEN_A();
    void thread_tmp_10_fu_185_p2();
    void thread_tmp_2_fu_169_p2();
    void thread_tmp_3_fu_191_p2();
    void thread_tmp_5_fu_196_p1();
    void thread_tmp_6_fu_221_p2();
    void thread_tmp_7_fu_202_p2();
    void thread_tmp_8_fu_174_p2();
    void thread_tmp_9_fu_208_p2();
    void thread_tmp_fu_164_p2();
    void thread_tmp_s_fu_179_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif

#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : opb_plbv46_bridge
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN opb_plbv46_bridge

## Peripheral Options
OPTION HDL = VHDL
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION DESC = OPB to PLBV46 Bridge
OPTION LONG_DESC = OPB to PLBV46 bridge
OPTION IP_GROUP = Bus and Bridge:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED , virtex6lx=AVAILABLE)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = MPLB, BUS_TYPE = MASTER, BUS_STD = PLBV46
BUS_INTERFACE BUS = SOPB, BUS_TYPE = SLAVE, BUS_STD = OPB

## Generics for VHDL or Parameters for Verilog
PARAMETER C_NUM_ADDR_RNG = 1, DT = INTEGER, RANGE = (1:4)
PARAMETER C_RNG0_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SOPB, ADDRESS = BASE, PAIR = C_RNG0_HIGHADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=1), ASSIGNMENT = REQUIRE
PARAMETER C_RNG0_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SOPB, ADDRESS = HIGH, PAIR = C_RNG0_BASEADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=1), ASSIGNMENT = REQUIRE
PARAMETER C_RNG1_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SOPB, ADDRESS = BASE, PAIR = C_RNG1_HIGHADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=2), ASSIGNMENT = REQUIRE
PARAMETER C_RNG1_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SOPB, ADDRESS = HIGH, PAIR = C_RNG1_BASEADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=2), ASSIGNMENT = REQUIRE
PARAMETER C_RNG2_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SOPB, ADDRESS = BASE, PAIR = C_RNG2_HIGHADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=3), ASSIGNMENT = REQUIRE
PARAMETER C_RNG2_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SOPB, ADDRESS = HIGH, PAIR = C_RNG2_BASEADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=3), ASSIGNMENT = REQUIRE
PARAMETER C_RNG3_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SOPB, ADDRESS = BASE, PAIR = C_RNG3_HIGHADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=4), ASSIGNMENT = REQUIRE
PARAMETER C_RNG3_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SOPB, ADDRESS = HIGH, PAIR = C_RNG3_BASEADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=4), ASSIGNMENT = REQUIRE
PARAMETER C_BUS_CLOCK_PERIOD_RATIO = 1, DT = INTEGER, RANGE = (1:2)
PARAMETER C_PREFETCH_TIMEOUT = 10, DT = INTEGER, RANGE = (5:32)
PARAMETER C_MPLB_AWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_DWIDTH = 32, DT = INTEGER, BUS = MPLB
PARAMETER C_MPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex4, DT = STRING

## Ports
PORT MPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = MPLB
PORT MPLB_Rst = MPLB_Rst, DIR = I, SIGIS = RST, BUS = MPLB
PORT MD_Error = "", DIR = O
PORT M_request = M_request, DIR = O, BUS = MPLB
PORT M_priority = M_priority, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_busLock = M_busLock, DIR = O, BUS = MPLB
PORT M_RNW = M_RNW, DIR = O, BUS = MPLB
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_MPLB_DWIDTH/8)-1)], BUS = MPLB
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MPLB
PORT M_type = M_type, DIR = O, VEC = [0:2], BUS = MPLB
PORT M_ABus = M_ABus, DIR = O, VEC = [0:31], BUS = MPLB
PORT M_wrBurst = M_wrBurst, DIR = O, BUS = MPLB
PORT M_rdBurst = M_rdBurst, DIR = O, BUS = MPLB
PORT M_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT PLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MPLB
PORT PLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB
PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MPLB
PORT PLB_MTimeout = PLB_MTimeout, DIR = I, BUS = MPLB
PORT PLB_MRdErr = PLB_MRdErr, DIR = I, BUS = MPLB
PORT PLB_MWrErr = PLB_MWrErr, DIR = I, BUS = MPLB
PORT PLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT PLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MPLB
PORT PLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MPLB
PORT PLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MPLB
PORT PLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MPLB
PORT M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB
PORT M_lockErr = M_lockErr, DIR = O, BUS = MPLB
PORT M_abort = M_abort, DIR = O, BUS = MPLB
PORT M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = MPLB
PORT PLB_MBusy = PLB_MBusy, DIR = I, BUS = MPLB
PORT PLB_MIRQ = PLB_MIRQ, DIR = I, BUS = MPLB
PORT PLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB
PORT SOPB_rst = OPB_Rst, DIR = I, SIGIS = RST, BUS = SOPB
PORT SOPB_clk = "", DIR = I, SIGIS = CLK, BUS = SOPB
PORT OPB_Select = OPB_select, DIR = I, BUS = SOPB
PORT OPB_RNW = OPB_RNW, DIR = I, BUS = SOPB
PORT OPB_BE = OPB_BE, DIR = I, VEC = [0:3], BUS = SOPB
PORT OPB_seqAddr = OPB_seqAddr, DIR = I, BUS = SOPB
PORT OPB_DBus = OPB_DBus, DIR = I, VEC = [0:31], BUS = SOPB
PORT OPB_ABus = OPB_ABus, DIR = I, VEC = [0:31], BUS = SOPB
PORT Sl_xferAck = Sl_xferAck, DIR = O, BUS = SOPB
PORT Sl_errAck = Sl_errAck, DIR = O, BUS = SOPB
PORT Sl_retry = Sl_retry, DIR = O, BUS = SOPB
PORT Sl_ToutSup = Sl_toutSup, DIR = O, BUS = SOPB
PORT Sl_DBus = Sl_DBus, DIR = O, VEC = [0:31], BUS = SOPB

END
